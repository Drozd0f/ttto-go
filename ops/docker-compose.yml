version: '3.9'

services:
  app:
    ports:
      - "8080:8080"
    build: 
      target: prod
      context: ..
      dockerfile: ops/monolith/Dockerfile
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - monolith/.env

  gateway:
    ports:
      - "4444:8080"
    build:
      target: prod
      context: ..
      dockerfile: ops/gateway/Dockerfile
    env_file:
      - gateway/.env

  auth:
    build:
      target: prod
      context: ..
      dockerfile: ops/auth/Dockerfile
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - auth/.env

  db:
    image: postgres:latest
    restart: always
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=test
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U test" ]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  db:
